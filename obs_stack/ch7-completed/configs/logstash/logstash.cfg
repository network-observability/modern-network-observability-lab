input {
    # Syslog input plugin
    syslog {
        # Setting a port to receive syslog messages
        port => 1515
        type => syslog
    }
}

filter {
    # Filter to mutate the event
    mutate {
        # Rename the logsource field to device
        rename => { "logsource" => "device" }
        # Replace the value of the host field with logstash
        replace => { "host" => "logstash" }
    }
    grok {
        match => [
            ## Example Log
            ### %BGP-5-ADJCHANGE: peer 192.168.33.2 (AS 6003) old state OpenConfirm event RecvKeepAlive new state Established
            "message", "%%{WORD:vendor_facility}-%{INT}-%{WORD:vendor_facility_process}: ?%{GREEDYDATA:log_message}"
        ]
    }
    if [vendor_facility] == "LINEPROTO" and [vendor_facility_process] == "UPDOWN" {
        # Category to identify the event
        mutate {
            add_field => { "event_type" => "interface_status" }
        }
        # Grok the log message to extract the interface and status
        grok {
            match => [
                "log_message", "Line protocol on Interface %{DATA:interface}, changed state to %{WORD:interface_status}"
            ]
        }
    }
    mutate {
        # Remove the message field
        remove_field => [ "message" ]
    }
}

output {
    # Outputs to stdout for debugging
    stdout {
        codec => "json"
    }
}